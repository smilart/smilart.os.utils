#!/bin/bash

PATH_CONFIGURE_DIR="/etc/smilart";
PATH_CLUSTER_INSTALLED="$PATH_CONFIGURE_DIR/cluster_installed";
ETCD_PORT=2379;

#exist dialog?
dialog --clear;
if [[ $? != 0 ]];then
  echo -e "\E[31mERROR: Cannot run 'dialog'.">&2;tput sgr0;
  exit 1;
fi;

#**************log ERROR****************#
LOG_ERROR[1]="ERROR: Not checked configure server.";
LOG_ERROR[2]="ERROR: Field 'Ip' is empty.";
LOG_ERROR[3]="ERROR: Field 'Ip' is incorrect.";
LOG_ERROR[4]="ERROR: Failed to ping the network interface."
#********Genetate tempfiles from dialog*********#
tempfile() {
    tempprefix=$(basename "$0");
    mktemp /tmp/${tempprefix}.XXXXXX;
}

TMP_DIALOG_WARN=$(tempfile)
TMP_DIALOG_MENU=$(tempfile)
TMP_DIALOG_ERROR=$(tempfile)

echo "
dialog_color = (YELLOW,WHITE,ON)
title_color = (RED,WHITE,ON)
" > $TMP_DIALOG_WARN

echo "
bindkey formbox   TAB  form_next
bindkey formfield TAB  form_next
bindkey formfield BTAB form_prev
bindkey formbox   BTAB form_prev
" > $TMP_DIALOG_MENU;

echo "
dialog_color = (RED,WHITE,OFF)
title_color = (RED,WHITE,ON)
" > $TMP_DIALOG_ERROR

# Function at break script
run_at_break(){
  sleep 1;
  DIALOGRC="$TMP_DIALOG_WARN" \
    dialog --ok-label "OK" \
           --msgbox "\nWARN: Cluster is not configured." 10 50;
  rm -f $TMP_DIALOG_MENU $TMP_DIALOG_ERROR $TMP_DIALOG_WARN;
  exit 1;
}
# Function at exit script
run_at_exit(){
  rm -f $TMP_DIALOG_MENU $TMP_DIALOG_ERROR $TMP_DIALOG_WARN;
  exit 0;
}

trap 'run_at_break' SIGHUP SIGINT SIGTERM
#***********************************************#

# echo ERROR to dialog
# error_func <text>
error_func() {
  DIALOGRC="$TMP_DIALOG_ERROR" \
    dialog --msgbox "\n$1" 10 50
}

# valid_ip_func <ip>
# valid_ip_func 192.168.1.1
function valid_ip_func() {
  if ! [[ $1 =~ ^(25[0-5]|2[0-4][i0-9]|[0-1][0-9]{2}|[0-9]{2}|[0-9])(\.(25[0-5]|2[0-4][0-9]|[0-1][0-9]{2}|[0-9]{2}|[0-9])){3}$ ]]; then
    error_func "${LOG_ERROR[3]}";
    continue
  fi;
}

#****************CONFIGURE CLUSTER**************#
EXIT_FORM="true";
FORM_IP='';
while [[ $EXIT_FORM == "true" ]];do
  # Store data to $cmd variable
  exec 3>&1
  FORM_CLUSTER=$(DIALOGRC="$TMP_DIALOG_MENU" dialog --clear \
    --ok-label "NEXT" \
    --title "Smilart Operating System" \
    --radiolist "\nAdditional cluster node or standalone server (first node in cluster):" \
      11 50 4 \
      1 "Standalone server" off \
      2 "Additional node" off \
      2>&1 1>&3)
  DIALOG_RETURN_VALUE=$?
  exec 3>&-

  if [[ $DIALOG_RETURN_VALUE == 1 || $DIALOG_RETURN_VALUE == 255 ]]; then
    run_at_break;
  fi;

  #Empty ?
  if [[ -z "$FORM_CLUSTER" ]]; then
     error_func "${LOG_ERROR[1]}";
     continue
  fi

  if [[ "$FORM_CLUSTER" == "2" ]];then
      # display values just entered
      # open fd
      exec 3>&1

      # Store data to $DIALOG_STRING variable
      FORM_IP=$(DIALOGRC="$TMP_DIALOG_MENU" dialog --clear \
        --ok-label "OK" \
        --title "Smilart Operating System" \
        --form "\nEnter address from etcd-server:" \
       0 0 0 \
       "Ip:              " 1 1 "$FORM_IP"           1 20 30 0 \
       2>&1 1>&3)
       DIALOG_RETURN_VALUE=$?
       exec 3>&-

      #ESC in dialog?
      if [[ $DIALOG_RETURN_VALUE == 1 || $DIALOG_RETURN_VALUE == 255 ]]; then
        sleep 1;
        continue
      fi;

      #Empty?
      if [[ -z "$FORM_IP" ]]; then
        error_func "${LOG_ERROR[2]}";
        continue
      fi;

      #Valid ip?
      valid_ip_func $FORM_IP;

      #Ping?
      nc -vz -w 2 $FORM_IP $ETCD_PORT > /dev/null 2>&1;
      if [[ $? != 0 ]];then
        error_func "${LOG_ERROR[4]}";
        continue
      fi;
      CLUSTER_INSTALLED="$FORM_IP"
  else
      CLUSTER_INSTALLED="single"
  fi;

  EXIT_FORM="false";
done;



#*******************Configuring etcd************#
#*******************Save to file****************#
echo "$CLUSTER_INSTALLED" > $PATH_CLUSTER_INSTALLED;
if [[ $? != 0 ]];then
  echo -e "\E[31mERROR: Cannot create '$PATH_CLUSTER_INSTALLED'.">&2;tput sgr0;
  run_at_break;
fi;

#Configuring master etcd if CLUSTER_INSTALLED is not "single"
HOST_IP=`cat /etc/systemd/network/static.network | grep 'Address' | sed s#"Address="##g | awk -F '/' ' {print $1} '`;
if [[ $CLUSTER_INSTALLED != "single" ]]; then
    MEMBERS_MASTER=`curl -s http://$CLUSTER_INSTALLED:2379/v2/members | sed s#{#"\n"{#g | grep name`;
    etcdctl --peers=$CLUSTER_INSTALLED:$ETCD_PORT member add `hostname` http://$HOST_IP:2380;
    if [ $? -ne 0 ]; then
        echo -e "\E[31m Error configuring master etcd!" >&2;tput sgr0;
        exit 1;
    fi;
fi;

#Stopping daemon etcd
sudo systemctl daemon-reload;
sudo systemctl stop etcd2.service;
sudo systemctl stop etcd2-cluster.service;
#Enable service etcd
sudo systemctl enable etcd2.service > /dev/null;
#Clearing cache etcd
sudo rm -f -R /var/lib/etcd2/* > /dev/null 2>&1;

# Generating env to services

    # Configure etcd2.service
    echo "ETCD_DATA_DIR=\"/var/lib/etcd2\""                                        > $PATH_CONFIGURE_DIR/etcd2.service.env;
    echo "ETCD_NAME=\"`hostname`\""                                               >> $PATH_CONFIGURE_DIR/etcd2.service.env;
    echo "ETCD_LISTEN_PEER_URLS=\"http://$HOST_IP:2380\""                         >> $PATH_CONFIGURE_DIR/etcd2.service.env;
    echo "ETCD_LISTEN_CLIENT_URLS=\"http://$HOST_IP:2379,http://127.0.0.1:2379\"" >> $PATH_CONFIGURE_DIR/etcd2.service.env;
    echo "ETCD_ADVERTISE_CLIENT_URLS=\"http://$HOST_IP:2379\""                    >> $PATH_CONFIGURE_DIR/etcd2.service.env;

    # etcd2 prestart configure

    echo "ETCD_DATA_DIR=\"/var/lib/etcd2\""                                          > $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
    echo "ETCD_NAME=\"`hostname`\""                                                 >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
    echo "ETCD_LISTEN_CLIENT_URLS=\"http://$HOST_IP:2379,http://127.0.0.1:2379\""   >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
    echo "ETCD_ADVERTISE_CLIENT_URLS=\"http://$HOST_IP:2379\""                      >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
    echo "ETCD_INITIAL_CLUSTER_TOKEN=\"smilart-cluster\""                           >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
    if [[ "$CLUSTER_INSTALLED" == 'single' ]];then

      echo "ETCD_INITIAL_ADVERTISE_PEER_URLS=\"http://$HOST_IP:2380\""              >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
      echo "ETCD_LISTEN_PEER_URLS=\"http://$HOST_IP:2380,http://127.0.0.1:2380\""   >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
      echo "ETCD_INITIAL_CLUSTER_STATE=\"new\""                                     >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
      echo "ETCD_INITIAL_CLUSTER=\"`hostname`=http://$HOST_IP:2380\""               >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
    else

      for line in $MEMBERS_MASTER; do
          NAME=`echo $line | sed s#,\"#"\n",{#g | grep name | awk -F '"' ' {print $3} '`;
          PEER_URL=`echo $line | sed s#,\"#"\n",{#g | grep peerURLs | awk -F '"' ' {print $3} '`;
          INITIAL_CLUSTER=`echo "$INITIAL_CLUSTER,$NAME=$PEER_URL"`;
      done
      INITIAL_CLUSTER=`echo $INITIAL_CLUSTER | sed s#\^,##g`;
      echo "ETCD_INITIAL_CLUSTER=\"$INITIAL_CLUSTER,`hostname`=http://$HOST_IP:2380\"" \
                                                                                    >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
      echo "ETCD_LISTEN_PEER_URLS=\"http://$HOST_IP:2380\""                         >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
      echo "ETCD_INITIAL_CLUSTER_STATE=\"existing\""                                >> $PATH_CONFIGURE_DIR/etcd2-cluster.service.env;
    fi;

# Starting etcd
sudo systemctl start etcd2-cluster.service;
if [ $? -ne 0 ]; then
    echo -e "\E[31m Etcd2 service is not started!" >&2;tput sgr0;
    exit 1;
else
    echo -e "\E[32m Etcd2 service is started.";tput sgr0;
fi;

run_at_exit;
